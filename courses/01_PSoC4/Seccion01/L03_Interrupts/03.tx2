[LESSON_FOLDER]../courses/01_PSoC4/Seccion01/L03_Interrupts/
[IMG_FOLDER]img/

[TITLE_SPANISH]Interrupciones
[TITLE_ENGLISH]Interrupts

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Vamos a usar el pulsador <b>SW2</b> para encender el led RGB. Pero en este proyecto vamos a usar interrupciones.
[ENGLISH]Lets use the switch button <b>SW2</b> to control the RGB led. But in this project with interrupts.
[END_LIST]
[BLOCK_END]

[SECTION_SPANISH]Pasos
[SECTION_ENGLISH]Steps

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Ve al esquemático.
[ENGLISH]Go to the schematic.
[END_LIST]

[IMG]02.png;50
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Haz doble clic en <b>Pin_SW2</b>.
[ENGLISH]Double click on <b>Pin_SW2</b>.
[END_LIST]

[IMG]04.png;90
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]En la pestaña <b>Input</b> selecciona el modo de la interrupción como flanco de bajada (<b>Falling edge</b>).
[ENGLISH]In the tab <b>Input</b> select <b>Falling edge</b> as interrupt mode.
[END_LIST]

[IMG]06a.png;90
[IMG]003_Edges.png;90
[IMG]07.png;90
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]En el esquemático ha cambiado el símbolo del <b>Pin_SW2</b>.
[ENGLISH]In the schematic the symbol of <b>Pin_SW2</b> has changed.
[END_LIST]

[IMG]08.png;90
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Ve al catálogo de componentes y busca las interrupciones.
[ENGLISH]Go to the Catalog component and search for interrupts.
[END_LIST]

[IMG]11.png;50
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Arrastra el componente al esquemático.
[ENGLISH]Drag the component into the schematic.
[END_LIST]

[IMG]12.png;90
[IMG]14.png;90
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Y conéctaclo a <b>Pin_SW2</b>.
[ENGLISH]And connect it to <b>Pin_SW2</b>.
[END_LIST]

[IMG]15.png;90
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Haz doble clic en la ISR (Interrupt Service Routine).
[ENGLISH]Double click on the ISR (Interrupt Service Routine).
[END_LIST]

[IMG]18.png;90
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Cambia el nombre a <b>Pin_SW2_Int</b>.
[ENGLISH]Rename it to <b>Pin_SW2_Int</b>.
[END_LIST]

[IMG]19.png;70
[IMG]21.png;90
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Si quieres más información sobre cualquier componente haz clic con el botón derecho del ratón y abre la hoja de características (Open Datasheet).
[ENGLISH]If you need more information about any component, just left click on it and Open Datasheet.
[END_LIST]

[IMG]23.png;50
[IMG]24.png;90
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Ve a <b>main.c</b>.
[ENGLISH]Go to <b>main.c</b>.
[END_LIST]

[IMG]25.png;50

[SPANISH]Y añade el siguiente código:
[ENGLISH]And add the following piece of code:

[SOURCE_CODE_BEGIN]12
#include <project.h>

CY_ISR ( Pin_SW2_Handler )
{
    Pin_Rojo_Write( ~ Pin_Rojo_Read() );
    Pin_SW2_ClearInterrupt();
}

int main()
{
    CyGlobalIntEnable; /* Enable global interrupts. */

    Pin_SW2_Int_StartEx(Pin_SW2_Handler);

    for(;;)
    {
        Pin_Azul_Write(1);
        CyDelay(500);
        Pin_Azul_Write(0);
        CyDelay(500);
    }
}
[SOURCE_CODE_END]
[BLOCK_END]

[SECTION_SPANISH]ISR (Interrupt Service Routine) 
[SECTION_ENGLISH]ISR (Interrupt Service Routine)

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Cada vez que se pulse <b>SW2</b> la rutina ISR <b>Pin_SW2_Handler</b> será ejecutada y el led rojo cambiará de estado.
[ENGLISH]Every time the switch button <b>SW2</b> is pressed the ISR routine <b>Pin_SW2_Handler</b> will be executed and the red led will toggle.
[END_LIST]

[IMG]003_ISR.png;90

[BEGIN_LIST]
[SPANISH]<b>Pin_SW2_Handler</b> es la rutina de atención a la interrupción.
[ENGLISH]<b>Pin_SW2_Handler</b> is the interrupt service routine.
[END_LIST]

[SOURCE_CODE_EX_BEGIN]12
:code:#include <project.h>
:code:
:code:CY_ISR ( Pin_SW2_Handler )
:key1:-------
:es__:Esta es una macro que le dice al compilador que la función es una rutina de atención a la interrupción.
:en__:This is a macro that tells the compiler that this is an interrupt routine.

:key2:         ---------------
:es__:Este es el nombre de la rutina y puede ser cualquier nombre que quieras.
:en__:This is the name of the routine and it can be any sensible name you like.

:code:{
:code:    Pin_Rojo_Write ( ~ Pin_Rojo_Read() );
:key3:                     -
:es__:Niega el valor para hacer el toggle (cambio) en el led.
:en__:Negate the value to toggle the led.

:key4:                       ---------------
:es__:Lee el estado de la salida digital conectada al led rojo.
:en__:Read the value of the digital output connected to the red led.

:key5:    --------------
:es__:Activa la salida conectada al led rojo.
:en__:Activate the digital output connected to the red led.
:code:    Pin_SW2_ClearInterrupt();

:key6:    ------------------------
:es__:Borra el flag de la interrupción indicando que la interrupción ya ha sido atendida.
:en__:Clear the interrupt flag, indicating that the interrupt has been handled.

:code:}
:code:
:code:int main()
:code:{
:code:    CyGlobalIntEnable;
:code:
:code:    Pin_SW2_Int_StartEx(Pin_SW2_Handler);
:code:
:code:    for(;;)
:code:    {
:code:        Pin_Azul_Write(1);
:code:        CyDelay(500);
:code:        Pin_Azul_Write(0);
:code:        CyDelay(500);
:code:    }
:code:}
[SOURCE_CODE_EX_END]
[SPANISH]<small>(Pasa el ratón sobre las palabras resaltadas para obtener más información)</small>
[ENGLISH]<small>(hover the mouse over the highlighted words for information)</small>
[BLOCK_END]

[SECTION_SPANISH]Función <b>main</b>
[SECTION_ENGLISH]<b>main</b> function

[BLOCK_START]
[SOURCE_CODE_EX_BEGIN]12
:code:#include <project.h>
:code:
:code:CY_ISR ( Pin_SW2_Handler )
:code:{
:code:    Pin_Rojo_Write ( ~ Pin_Rojo_Read() );
:code:    Pin_SW2_ClearInterrupt();
:code:}
:code:

:code:int main()
:key1:    ----
:es__:Función <b>main</b>
:en__:<b>main</b> function.

:code:{

:code:    CyGlobalIntEnable; 
:key2:    -------------------
:es__:Habilitamos interrupciones globalmente.
:en__:Enable global interrupts.

:code:

:code:    Pin_SW2_Int_StartEx ( Pin_SW2_Handler );
:key3:    -------------------
:es__:La función <b>Pin_SW2_Int_StartEx()</b> inicializa la interrupción de SW2 y asigna la función <b>Pin_SW2_Handler</b> como ISR.
:en__:The function <b>Pin_SW2_Int_StartEx()</b> initializes the interrupt of SW2 and configures the function <b>Pin_SW2_Handler</b> as ISR. 

:code:

:code:    for(;;)
:key4:    ---
:es__:El bucle infinito hará parpadear el led azul cada medio segundo.
:en__:The infinite loop will blink the blue led every half a second.

:code:    {

:code:        Pin_Azul_Write(1);
:key5:        --------------
:es__:Apagamos el led azul.
:en__:Blue led off.

:code:        CyDelay(500);
:key6:        ------------
:es__:Esperamos medio segundo.
:en__:Wait for half a second.

:code:        Pin_Azul_Write(0);
:key1:        --------------
:es__:Encendemos el led azul.
:en__:Blue led on.

:code:        CyDelay(500);
:key2:        ------------
:es__:Esperamos medio segundo.
:en__:Wait for half a second.

:code:    }
:code:}
[SOURCE_CODE_EX_END]
[SPANISH]<small>(Pasa el ratón sobre las palabras resaltadas para obtener más información)</small>
[ENGLISH]<small>(hover the mouse over the highlighted words for information)</small>
[BLOCK_END]

[SECTION_SPANISH]Descargas
[SECTION_ENGLISH]Downloads

[BLOCK_START]
[BEGIN_LIST]
[LINK_SPANISH]downloads/WS003.zip;Descarga el proyecto aquí <b>(PSoC Creator 3.3)</b>
[LINK_ENGLISH]downloads/WS003.zip;Download the project here <b>(PSoC Creator 3.3)</b>
[END_LIST]
[BLOCK_END]
