[LESSON_FOLDER]../courses/01_PSoC4/Seccion05/L21_iDAC_COS/
[IMG_FOLDER]img/

[TITLE_SPANISH]iDAC (COS)
[TITLE_ENGLISH]iDAC (COS)

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]En este proyecto vamos a usar el componente IDAC para generar una señal COS (coseno)
[ENGLISH]On this project you will use the ADC component to generate a COS (cosine) signal
[SPANISH]Vamos a utilizar el mismo hardware que en el proyecto anterior (020-iDAC)
[ENGLISH]You will use the same hardware as on the previous project (020-iDAC)
[END_LIST]
[IMG]Setup.png
[IMG_SPANISH]P021_IDAC_pins_es.png
[IMG_ENGLISH]P021_IDAC_pins_en.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Esta es la señal a generar
[ENGLISH]This is the signal to generate
[END_LIST]
[IMG]TEK0001.JPG
[BLOCK_END]

[SECTION_SPANISH]Pasos
[SECTION_ENGLISH]Steps

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Copia el proyecto anterior y renómbralo como WS021
[ENGLISH]Copy the previous project and rename it as WS021
[END_LIST]
[IMG]01.png
[IMG]02.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Añade el siguiente código en "main.c"
[ENGLISH]Add the following code in "main.c"
[END_LIST]
[IMG]03.png

[SOURCE_CODE_EX_BEGIN]12
:code:#include "project.h"
:code:
:code:const uint8 au8Signal[] = {255,255,255,255,254,254,254,253,253,252,251,250,250,249,248,246,245,244,243,241,240,238,237,235,234,232,230,228,226,224,222,220,218,215,213,211,208,206,203,201,198,196,193,190,188,185,182,179,176,173,170,167,165,162,158,155,152,149,146,143,140,137,134,131,128,124,121,118,115,112,109,106,103,100,97,93,90,88,85,82,79,76,73,70,67,65,62,59,57,54,52,49,47,44,42,40,37,35,33,31,29,27,25,23,21,20,18,17,15,14,12,11,10,9,7,6,5,5,4,3,2,2,1,1,1,0,0,0,0,0,0,0,1,1,1,2,2,3,4,5,5,6,7,9,10,11,12,14,15,17,18,20,21,23,25,27,29,31,33,35,37,40,42,44,47,49,52,54,57,59,62,65,67,70,73,76,79,82,85,88,90,93,97,100,103,106,109,112,115,118,121,124,128,131,134,137,140,143,146,149,152,155,158,162,165,167,170,173,176,179,182,185,188,190,193,196,198,201,203,206,208,211,213,215,218,220,222,224,226,228,230,232,234,235,237,238,240,241,243,244,245,246,248,249,250,250,251,252,253,253,254,254,254,255,255,255}
:key1:            -----------
:es__: Declara la variable <b>au8Signal</b> que almacena la señal coseno (ver hoja excel)
:en__: Declares the variable <b>au8Signal</b> that stores the values of the cosine signal

:code:
:code:int main(void)
:code:{
:code:    uint16  u16Index    =   0;
:key2:            --------
:es__: Declara la variable <b>u16Index</b> que servirá como índice para recorrer el array <b>au8Signal</b>
:en__: Declare the variable <b>u16Index</b> that will be the index to walk through the array <b>au8Signal</b>

:code:
:code:    CyGlobalIntEnable; /* Enable global interrupts. */
:code:
:code:    IDAC_Start();
:key3:    ------------
:es__: Inicializa el componente IDAC
:en__: Initializes the IDAC component

:code:
:code:    for(;;)
:code:    {
:code:        uint8   u8Value =   au8Signal[u16Index++];
:key4:                -------
:es__: Declara la variable <b>u8Value</b> que almacena el valor digital de la corriente a generar en el componente IDAC
:en__: Declares the variable <b>u8Value</b> that stores the values of the cosine signal
:key5:                            ---------------------
:es__: Coge el siguiente valor a generar del array <b>au8Signal</b>
:en__: Gets the following value to generate from the array <b>au8Signal</b>

:code:        
:code:        IDAC_SetValue(u8Value);
:key6:        ----------------------
:es__: Pone el valor en el componente IDAC
:en__: Sets the value on the IDAC component

:code:        
:code:        if (u16Index >= sizeof(au8Signal))
:key1:        ----------------------------------
:es__: Si el índice del array es mayor que su tamaño se pone a cero
:en__: If the index of the array is greater than the size it is set to zero

:code:        {
:code:            u16Index = 0;
:code:        }
:code:    }
:code:}
[SOURCE_CODE_EX_END]
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Como siempre, compila el proyecto y transfiere el programa
[ENGLISH]As always, build the project and transfer the program
[END_LIST]
[BLOCK_END]

[SECTION_SPANISH]Descargas
[SECTION_ENGLISH]Downloads

[BLOCK_START]
[BEGIN_LIST]
[LINK_SPANISH]downloads/WS021.zip;Descarga el proyecto aquí (PSoC Creator 4.0) y la hoja excel para calcular los valores del coseno.
[LINK_ENGLISH]downloads/WS021.zip;Download the project here (PSoC Creator 4.0) and the excel sheet to calculate the cosine values.
[END_LIST]
[BLOCK_END]





