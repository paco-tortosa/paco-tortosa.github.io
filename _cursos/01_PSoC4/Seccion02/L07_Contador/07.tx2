[LESSON_FOLDER]../_cursos/01_PSoC4/Seccion02/L07_Contador/
[IMG_FOLDER]img/

[TITLE_SPANISH]Contador
[TITLE_ENGLISH]Counter

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]En este proyecto vas a conocer un nuevo componente hardware, el contador (Counter)
[ENGLISH]In this project you will learn a new HW component, the Counter
[SPANISH]La secuencia que hay que programar es :
[ENGLISH]The sequence you have to program is :
[END_LIST]
[IMG]007_Counter_Explanation.png
[BEGIN_LIST]
[SPANISH]Cada 3 pulsaciones de SW2 se va a generar una interrupción, y en esa interrupción vas a conmutar el estado del led verde
[ENGLISH]Every 3 pushes of SW2 an interrupt will be generated and inside this interrupt you will toggle the green LED
[SPANISH]Para hacer eso vas a usar un contador que vas a configurar con un valor inicial de 2. Cada vez que se pulse SW2 el contador será decrementado y cuando pase de 0 a 2 se generará la interrupción
[ENGLISH]To do this, you will use a counter, that must be configured with an initial value of 2. Every time you press SW2 the counter value will be decremented and when it passes from 0 to 2 an interrupt will be raised
[END_LIST]
[BLOCK_END]

[SECTION_SPANISH]Pasos
[SECTION_ENGLISH]Steps

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Copia el Workspace 6 y renómbralo como Workspace 7
[ENGLISH]Copy the Workspace 6 and rename it as Workspace 7
[END_LIST]
[IMG]01.png
[IMG]02.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Ve al esquemático
[ENGLISH]Go to the schematic
[END_LIST]
[IMG]03.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Borra los componentes usados en el proyecto anterior
[ENGLISH]Remove the old stuff
[END_LIST]
[IMG]04.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Como vas a controlar los leds (en este caso el verde) desde el programa tienes que deshabilitar la conexión HW
[ENGLISH]As the leds (in this case the green one) will be controlled by the program, the "HW connection" must be disabled
[END_LIST]
[IMG]05.png
[IMG]06.png
[IMG]07.png
[IMG]08.png
[IMG]09.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Añade un Timer Counter desde el catálogo de componentes
[ENGLISH]Add a Timer Counter from the Component Catalog
[END_LIST]
[IMG]10.png
[IMG]11.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Se necesita un reloj para la entrada "clock"
[ENGLISH]A clock is necessary
[END_LIST]
[IMG]12.png
[IMG]13.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Ahora hay que configurar el Timer Counter
[ENGLISH]Now it is time to configure the Timer Counter
[END_LIST]
[IMG]14.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Renómbralo como "Counter"
[ENGLISH]Rename it as "Counter"
[END_LIST]
[IMG]15.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Modifica los siguientes valores :
[ENGLISH]Modify the following values : 
[END_LIST]
[TABLE_BEGIN]
[TABLE_ROW_BEGIN]
[TABLE_ITEM_SPANISH]Parámetro
[TABLE_ITEM_ENGLISH]Parameter
[TABLE_ITEM_SPANISH]Valor
[TABLE_ITEM_ENGLISH]Value
[TABLE_ITEM_SPANISH]Descripción
[TABLE_ITEM_ENGLISH]Description
[TABLE_ROW_END]
[TABLE_ROW_BEGIN]
[TABLE_ITEM_SPANISH]Counter mode
[TABLE_ITEM_ENGLISH]Counter mode
[TABLE_ITEM_SPANISH]Down (Hacia abajo)
[TABLE_ITEM_ENGLISH]Down
[TABLE_ITEM_SPANISH]En cada activación de la señal "count" se decrementará el contador
[TABLE_ITEM_ENGLISH]At every activation of the input "count" the counter value will be decremente
[TABLE_ROW_END]
[TABLE_ROW_BEGIN]
[TABLE_ITEM_SPANISH]Input "count"
[TABLE_ITEM_ENGLISH]Input "count"
[TABLE_ITEM_SPANISH]Habilitada y como flanco de bajada
[TABLE_ITEM_ENGLISH]Enabled and as falling edge
[TABLE_ITEM_SPANISH]La entrada será activa en el flanco de bajada
[TABLE_ITEM_ENGLISH]The input will be active at the falling edge
[TABLE_ROW_END]
[TABLE_ROW_BEGIN]
[TABLE_ITEM_SPANISH]Period
[TABLE_ITEM_ENGLISH]Period
[TABLE_ITEM_SPANISH]2
[TABLE_ITEM_ENGLISH]2
[TABLE_ITEM_SPANISH]Interrupción cada 2 + 1 pulsaciones de SW2
[TABLE_ITEM_ENGLISH]Interrupt every 2 + 1 pushes of SW2
[TABLE_ROW_END]
[TABLE_END]
[IMG]24.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Conecta el pulsador "Pin_SW2" a la entrada "count"
[ENGLISH]Connect the switch button "Pin_SW2" to the input "count"
[END_LIST]
[IMG]26.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Añade una interrupción y conéctala a la salida "interrupt" del Timer Counter
[ENGLISH]Add an interrupt component and connect it to the output "interrupt" of the Timer Counter
[END_LIST]
[IMG]27.png
[IMG]28.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Renombra la interrupción como "Counter_Int"
[ENGLISH]Rename the interrupt as "Counter_Int"
[END_LIST]
[IMG]29.png
[IMG]30.png
[IMG]31.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Genera la aplicación
[ENGLISH]Generate the application
[END_LIST]
[IMG]32.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Ve a "main.c"
[ENGLISH]Go to "main.c"
[END_LIST]
[IMG]33.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Añade el código :
[ENGLISH]Add the code :
[END_LIST]

[SOURCE_CODE_EX_BEGIN]12
:code:#include <project.h>
:code:
:code:CY_ISR( Counter_Int_Handler)
:key1:        -------------------
:es__: Declara la función <b>Counter_Int_Handler</b> como una ISR (rutina de servicio a interrupción)
:en__: Declare the function <b>Counter_Int_Handler</b> as ISR (interrupt service routine)

:code:{
:code:    Pin_Verde_Write( ~ Pin_Verde_Read() );
:key2:    -------------------------------------
:es__: Cambia el estado del led verde
:en__: Toggle the green LED

:code:    
:code:    Counter_ClearInterrupt( Counter_INTR_MASK_TC );
:key3:    ----------------------------------------------
:es__: Borra el flag de la interrupción
:en__: Clears the interrupt flag

:code:}
:code:
:code:int main()
:code:{
:code:    CyGlobalIntEnable; /* Enable global interrupts. */
:code:
:code:    Counter_Start();
:key4:    ---------------
:es__: Inicializa el Timer Counter
:en__: Initializes the Timer Counter

:code:    Counter_Int_StartEx(Counter_Int_Handler);
:key5:    ----------------------------------------
:es__: Configura la función <b>Counter_Int_Handler</b> como ISR del Timer Counter
:en__: Configures the function <b>Counter_Int_Handler</b> as ISR of the Timer Counter

:code:
:code:    for(;;)
:code:    {
:code:
:code:    }
:code:}
[SOURCE_CODE_EX_END]

[BEGIN_LIST]
[SPANISH]Como siempre, compila el proyecto y transfiere el programa
[ENGLISH]As always, build the project and transfer the program
[END_LIST]
[BLOCK_END]

[SECTION_SPANISH]Descargas
[SECTION_ENGLISH]Downloads

[BLOCK_START]
[BEGIN_LIST]
[LINK_SPANISH]downloads/WS007.zip;Descarga el proyecto aquí (PSoC Creator 3.3).
[LINK_ENGLISH]downloads/WS007.zip;Download the project here (PSoC Creator 3.3).
[END_LIST]
[BLOCK_END]
