[LESSON_FOLDER]../_cursos/04_STM32F0/Seccion05/L36_Program_HAL/
[IMG_FOLDER]img/

[TITLE_SPANISH]Programa (HAL)
[TITLE_ENGLISH]Program (HAL)

[MPPRO_SECTION_ES_EN]Video|Video
[MPPRO_VIDEO]03_Camtasia\01_Video.mp4|0

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Esto es lo que hace el programa que vamos a ver en esta lección. Cuando arranca el microcontrolador parpadea todos los leds 3 veces.
[ENGLISH]On the video you can see the program that we are going to do in this lesson . When the MCU starts, all the leds blink for 3 times.
[SPANISH]Cada línea tendrá un color, la primera será blanca, la segunda azul, la tercera verde y la cuarta roja.
[ENGLISH]Every line will be in a different color, the first one in white, the second one in blue, the third one in green and the fourth one in red.
[SPANISH]Después del parpadeo habrá una fila de color azul que se moverá verticalmente.
[ENGLISH]After the blinking there will be a row in blue color moving upwards.
[END_LIST]
[VIDEO_SPANISH]https://www.youtube.com/embed/MSyBh5-Im1c?rel=0
[VIDEO_ENGLISH]https://www.youtube.com/embed/MSyBh5-Im1c?rel=0
[BLOCK_END]

[TITLE_SPANISH]Pasos
[TITLE_ENGLISH]Steps

[MPPRO_SECTION_ES_EN]IDE|IDE
[MPPRO_VIDEO]03_Camtasia\03_cam_IDE.mp4|0

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Abre STM32CubeIDE.
[ENGLISH]Run STM32CubeIDE.
[END_LIST]
[IMG]01.png
[IMG]02.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Selecciona la unidad lógica <b>m</b> como directorio para el <b>Workspace</b>.
[ENGLISH]Select the logical drive <b>m</b> as the directory for the <b>Workspace</b>.
[END_LIST]
[IMG]03.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Vamos a crear un proyecto nuevo.
[ENGLISH]Create a new project.
[END_LIST]
[IMG]04.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Selecciona el kit.
[ENGLISH]Select the kit.
[END_LIST]
[IMG]05.png
[IMG]06.png
[IMG]07.png
[IMG]08.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Le voy a dar al proyecto el nombre <b>P16_Click4x4RGB_HAL</b>.
[ENGLISH]Give it the name <b>P16_Click4x4RGB_HAL</b>.
[END_LIST]
[IMG]09.png
[IMG]10.png

[BEGIN_LIST]
[SPANISH]Aquí ves el proyecto ya creado:
[ENGLISH]Here you can see the just created project.
[END_LIST]
[IMG]11.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Vamos a utilizar el pin conectado al led LD2 (<b>PA5</b>) para la señal <b>DIN</b> al Click.
[ENGLISH]We are going to use the pin connected to the led LD2 (<b>PA5</b>) for the <b>DIN</b> signal to the Click.
[END_LIST]
[IMG]12.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Vamos a comprobar que el compilador no va a aplicar optimizaciones al código ensamblador generado.
[ENGLISH]Let&#39s check that the compiler won't apply optimizations to the assembly code generated.
[SPANISH]Esto es importante porque el <b>timing</b> de las señales va a venir determinado por las instrucciones que genere el compilador.
[ENGLISH]This is important because the signals <b>timing</b> is going to be determined by the instructions generated by the compiler.
[END_LIST]
[IMG]13.png

[BEGIN_LIST]
[SPANISH]El nivel de optimización (<b>Optimization level</b>) por defecto es <b>None</b> (ninguno). Lo conservamos así.
[ENGLISH]The <b>Optimization level</b> is by default <b>None</b> . We keep it that way.
[END_LIST]
[IMG]14.png
[BLOCK_END]

[TITLE_SPANISH]main.c
[TITLE_ENGLISH]main.c

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Voy a insertar en <b>main.c</b> el código que he preparado. Aquí hay que ser cauteloso porque <b>main.c</b> es un fichero que va a ser modificado por el IDE.
[ENGLISH]I am going to add to <b>main.c</b> the source code that I have prepared. Here you have to be very careful because <b>main.c</b> is a file that is going to be modified by the IDE.
[SPANISH]Así que tengo que añadir mi código en sitios muy concretos.
[ENGLISH]So, I have to add my source code in specific places.
[END_LIST]
[IMG]27.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Voy a añadir las variables en la línea 47:
[ENGLISH]I am going to add the variables in the line 47:
[END_LIST]
[IMG]28.png

[BEGIN_LIST]
[SPANISH]Quedando el código así:
[ENGLISH]Resulting the source code like this:
[END_LIST]
[IMG]29.png

[BEGIN_LIST]
[SPANISH]Vamos a tener varios arrays de enteros de 8 bits sin signo con todos los colores de los leds.
[ENGLISH]There will be some 8-bit unsigned integer arrays with all the colors for the leds.
[SPANISH]Por ejemplo, en la variable array <b>au8Colors</b>[] vamos a tener los colores para el parpadeo inicial, una fila roja, una verde, una azul y la última blanca.
[ENGLISH]For example, in the array <b>au8Colors</b>[] we will have the colors for the initial blinking, a row in red, next in green, next in blue and the last one in white.
[SPANISH]La línea <b>67</b> tiene los colores RGB para el <b>led 01</b>,<br>la línea <b>68</b> para el <b>led 02</b> y <br>así hasta la línea <b>82</b> para el <b>led 16</b>.
[ENGLISH]The line <b>67</b> has the RGB colors for the <b>led 01</b>,<br>the line <b>68</b> for the <b>led 02</b> and <br>so on until the line <b>82</b> for the <b>led 16</b>. 
[END_LIST]
[SOURCE_CODE_EX_BEGIN]66
:code:const uint8_t au8Colors[]= {
:key6:              ---------
:es__:Array <b>au8Colors</b>
:en__:Array <b>au8Colors</b>

:code:                      0xFF,0x00,0x00,   //R,G,B Led 01
:key4:                                        --------------
:es__:Como sólo hay una intensidad distinta de cero (el color Rojo), el color final del led será Rojo.
:en__:As there is only one intensity different from 0 (the red color), the resulting color for the led will be red.

:key2:                      ----
:es__:Intensidad (de 0 a 255) del led Rojo del led RGB 01 (Como es 0xFF = 255, el led rojo está encendido a máxima intensidad)
:en__:Intensity (from 0 to 255) for the Red led of RGB led 01 (As it is 0xFF = 255, the red led lights at maximum intensity).

:key3:                           ----
:es__:Intensidad (de 0 a 255) del led Verde del led RGB 01 (Como es cero no se enciende el led verde).
:en__:Intensity (from 0 to 255) for the Green led of RGB led 01 (As it is 0 the green led is off).

:key1:                                ----
:es__:Intensidad (de 0 a 255) del led Azul del led RGB 01 (Como es cero no se enciende el led azul).
:en__:Intensity (from 0 to 255) for the Blue led of RGB led 01 (As it is 0 the blue led is off).

:code:                      0xFF,0x00,0x00,   //R,G,B Led 02
:code:                      0xFF,0x00,0x00,   //R,G,B Led 03
:code:                      0xFF,0x00,0x00,   //R,G,B Led 04
:code:                      0x00,0xFF,0x00,   //R,G,B Led 05
:key5:                                        --------------
:es__:Como sólo hay una intensidad distinta de cero (el color Verde), el color final del led será Verde.
:en__:As there is only one intensity different from 0 (the green color), the resulting color for the led will be green.

:key3:                           ----
:es__:Intensidad del led Verde del led RGB 05.
:en__:Intensity for the Green led of RGB led 05.

:code:                      0x00,0xFF,0x00,   //R,G,B Led 06
:code:                      0x00,0xFF,0x00,   //R,G,B Led 07
:code:                      0x00,0xFF,0x00,   //R,G,B Led 08
:code:                      0x00,0x00,0xFF,   //R,G,B Led 09
:key6:                                        --------------
:es__:Como sólo hay una intensidad distinta de cero (el color Azul), el color final del led será Azul.
:en__:As there is only one intensity different from 0 (the blue color), the resulting color for the led will be blue.

:key1:                                ----
:es__:Intensidad del led Azul del led RGB 09.
:en__:Intensity for the Blue led of RGB led 09.

:code:                      0x00,0x00,0xFF,   //R,G,B Led 10
:code:                      0x00,0x00,0xFF,   //R,G,B Led 11
:code:                      0x00,0x00,0xFF,   //R,G,B Led 12
:code:                      0xFF,0xFF,0xFF,   //R,G,B Led 13
:key1:                                        --------------
:es__:Como las 3 intensidades son iguales, el color final del led 13 será Blanco.
:en__:As the 3 intensities are equal, the final color for the led 13 is white.

:code:                      0xFF,0xFF,0xFF,   //R,G,B Led 14
:code:                      0xFF,0xFF,0xFF,   //R,G,B Led 15
:code:                      0xFF,0xFF,0xFF    //R,G,B Led 16
:code:                    };
[SOURCE_CODE_EX_END]

[BEGIN_LIST]
[SPANISH]El array <b>au8Off</b>[] va a apagar todos los leds. Todos los colores están a 0:
[ENGLISH]The array <b>au8Off</b>[] switch off all the leds. All the colors are 0:
[END_LIST]
[SOURCE_CODE_EX_BEGIN]47
:code:const uint8_t au8Off[]= {
:key6:              ------
:es__:Array <b>au8Off</b>
:en__:Array <b>au8Off</b>

:code:                      0x00,0x00,0x00,   //R,G,B Led 01
:code:                      0x00,0x00,0x00,   //R,G,B Led 02
:code:                      0x00,0x00,0x00,   //R,G,B Led 03
:code:                      0x00,0x00,0x00,   //R,G,B Led 04
:code:                      0x00,0x00,0x00,   //R,G,B Led 05
:code:                      0x00,0x00,0x00,   //R,G,B Led 06
:code:                      0x00,0x00,0x00,   //R,G,B Led 07
:code:                      0x00,0x00,0x00,   //R,G,B Led 08
:code:                      0x00,0x00,0x00,   //R,G,B Led 09
:code:                      0x00,0x00,0x00,   //R,G,B Led 10
:code:                      0x00,0x00,0x00,   //R,G,B Led 11
:code:                      0x00,0x00,0x00,   //R,G,B Led 12
:code:                      0x00,0x00,0x00,   //R,G,B Led 13
:code:                      0x00,0x00,0x00,   //R,G,B Led 14
:code:                      0x00,0x00,0x00,   //R,G,B Led 15
:code:                      0x00,0x00,0x00    //R,G,B Led 16
:code:                    };
[SOURCE_CODE_EX_END]

[BEGIN_LIST]
[SPANISH]El array <b>au8Colors0</b>[] va a encender de color azul la primera fila de leds. Todos los demás apagados.
[ENGLISH]The array <b>au8Colors0</b>[] switchs on, in blue, the first row of leds. The other rows are off.
[END_LIST]
[SOURCE_CODE_EX_BEGIN]85
:code:const uint8_t au8Colors0[]= {
:key6:              ----------
:es__:Array <b>au8Colors0</b>
:en__:Array <b>au8Colors0</b>

:code:                      0x00,0x00,0xFF,   //R,G,B Led 01
:key1:                                ----
:es__:Color azul para el Led 01.
:en__:Blue color for the Led 01.

:code:                      0x00,0x00,0xFF,   //R,G,B Led 02
:key1:                                ----
:es__:Color azul para el Led 02.
:en__:Blue color for the Led 01.

:code:                      0x00,0x00,0xFF,   //R,G,B Led 03
:key1:                                ----
:es__:Color azul para el Led 03.
:en__:Blue color for the Led 03.

:code:                      0x00,0x00,0xFF,   //R,G,B Led 04
:key1:                                ----
:es__:Color azul para el Led 04.
:en__:Blue color for the Led 04.

:code:                      0x00,0x00,0x00,   //R,G,B Led 05
:code:                      0x00,0x00,0x00,   //R,G,B Led 06
:code:                      0x00,0x00,0x00,   //R,G,B Led 07
:code:                      0x00,0x00,0x00,   //R,G,B Led 08
:code:                      0x00,0x00,0x00,   //R,G,B Led 09
:code:                      0x00,0x00,0x00,   //R,G,B Led 10
:code:                      0x00,0x00,0x00,   //R,G,B Led 11
:code:                      0x00,0x00,0x00,   //R,G,B Led 12
:code:                      0x00,0x00,0x00,   //R,G,B Led 13
:code:                      0x00,0x00,0x00,   //R,G,B Led 14
:code:                      0x00,0x00,0x00,   //R,G,B Led 15
:code:                      0x00,0x00,0x00    //R,G,B Led 16
:code:                    };
[SOURCE_CODE_EX_END]

[BEGIN_LIST]
[SPANISH]El array <b>au8Colors1</b>[] va a encender de color azul la segunda fila de leds. Todos los demás apagados.
[ENGLISH]The array <b>au8Colors0</b>[] switchs on, in blue, the second row of leds. The other rows are off.
[END_LIST]
[SOURCE_CODE_EX_BEGIN]104
:code:const uint8_t au8Colors1[]= {
:key6:              ----------
:es__:Array <b>au8Colors1</b>
:en__:Array <b>au8Colors1</b>

:code:                      0x00,0x00,0x00,   //R,G,B Led 01
:code:                      0x00,0x00,0x00,   //R,G,B Led 02
:code:                      0x00,0x00,0x00,   //R,G,B Led 03
:code:                      0x00,0x00,0x00,   //R,G,B Led 04
:code:                      0x00,0x00,0xFF,   //R,G,B Led 05
:key1:                                ----
:es__:Color azul para el Led 05.
:en__:Blue color for the Led 05.

:code:                      0x00,0x00,0xFF,   //R,G,B Led 06
:key1:                                ----
:es__:Color azul para el Led 06.
:en__:Blue color for the Led 06.

:code:                      0x00,0x00,0xFF,   //R,G,B Led 07
:key1:                                ----
:es__:Color azul para el Led 07.
:en__:Blue color for the Led 07.

:code:                      0x00,0x00,0xFF,   //R,G,B Led 08
:key1:                                ----
:es__:Color azul para el Led 08.
:en__:Blue color for the Led 08.

:code:                      0x00,0x00,0x00,   //R,G,B Led 09
:code:                      0x00,0x00,0x00,   //R,G,B Led 10
:code:                      0x00,0x00,0x00,   //R,G,B Led 11
:code:                      0x00,0x00,0x00,   //R,G,B Led 12
:code:                      0x00,0x00,0x00,   //R,G,B Led 13
:code:                      0x00,0x00,0x00,   //R,G,B Led 14
:code:                      0x00,0x00,0x00,   //R,G,B Led 15
:code:                      0x00,0x00,0x00    //R,G,B Led 16
:code:                    };
:code:
[SOURCE_CODE_EX_END]

[BEGIN_LIST]
[SPANISH]El array <b>au8Colors2</b>[] va a encender de color azul la tercera fila de leds. Todos los demás apagados.
[ENGLISH]The array <b>au8Colors0</b>[] switchs on, in blue, the third row of leds. The other rows are off.
[END_LIST]
[SOURCE_CODE_EX_BEGIN]123
:code:const uint8_t au8Colors2[]= {
:key6:              ----------
:es__:Array <b>au8Colors2</b>
:en__:Array <b>au8Colors2</b>

:code:                      0x00,0x00,0x00,   //R,G,B Led 01
:code:                      0x00,0x00,0x00,   //R,G,B Led 02
:code:                      0x00,0x00,0x00,   //R,G,B Led 03
:code:                      0x00,0x00,0x00,   //R,G,B Led 04
:code:                      0x00,0x00,0x00,   //R,G,B Led 05
:code:                      0x00,0x00,0x00,   //R,G,B Led 06
:code:                      0x00,0x00,0x00,   //R,G,B Led 07
:code:                      0x00,0x00,0x00,   //R,G,B Led 08
:code:                      0x00,0x00,0xFF,   //R,G,B Led 09
:key1:                                ----
:es__:Color azul para el Led 09.
:en__:Blue color for the Led 09.

:code:                      0x00,0x00,0xFF,   //R,G,B Led 10
:key1:                                ----
:es__:Color azul para el Led 10.
:en__:Blue color for the Led 10.

:code:                      0x00,0x00,0xFF,   //R,G,B Led 11
:key1:                                ----
:es__:Color azul para el Led 11.
:en__:Blue color for the Led 11.

:code:                      0x00,0x00,0xFF,   //R,G,B Led 12
:key1:                                ----
:es__:Color azul para el Led 12.
:en__:Blue color for the Led 12.

:code:                      0x00,0x00,0x00,   //R,G,B Led 13
:code:                      0x00,0x00,0x00,   //R,G,B Led 14
:code:                      0x00,0x00,0x00,   //R,G,B Led 15
:code:                      0x00,0x00,0x00    //R,G,B Led 16
:code:                    };
[SOURCE_CODE_EX_END]

[BEGIN_LIST]
[SPANISH]El array <b>au8Colors3</b>[] va a encender de color azul la cuarta fila de leds. Todos los demás apagados.
[ENGLISH]The array <b>au8Colors0</b>[] switchs on, in blue, the fourth row of leds. The other rows are off.
[END_LIST]
[SOURCE_CODE_EX_BEGIN]142
:code:const uint8_t au8Colors3[]= {
:key6:              ----------
:es__:Array <b>au8Colors3</b>
:en__:Array <b>au8Colors3</b>

:code:                      0x00,0x00,0x00,   //R,G,B Led 01
:code:                      0x00,0x00,0x00,   //R,G,B Led 02
:code:                      0x00,0x00,0x00,   //R,G,B Led 03
:code:                      0x00,0x00,0x00,   //R,G,B Led 04
:code:                      0x00,0x00,0x00,   //R,G,B Led 05
:code:                      0x00,0x00,0x00,   //R,G,B Led 06
:code:                      0x00,0x00,0x00,   //R,G,B Led 07
:code:                      0x00,0x00,0x00,   //R,G,B Led 08
:code:                      0x00,0x00,0x00,   //R,G,B Led 09
:code:                      0x00,0x00,0x00,   //R,G,B Led 10
:code:                      0x00,0x00,0x00,   //R,G,B Led 11
:code:                      0x00,0x00,0x00,   //R,G,B Led 12
:code:                      0x00,0x00,0xFF,   //R,G,B Led 13
:key1:                                ----
:es__:Color azul para el Led 13.
:en__:Blue color for the Led 13.

:code:                      0x00,0x00,0xFF,   //R,G,B Led 14
:key1:                                ----
:es__:Color azul para el Led 14.
:en__:Blue color for the Led 14.

:code:                      0x00,0x00,0xFF,   //R,G,B Led 15
:key1:                                ----
:es__:Color azul para el Led 15.
:en__:Blue color for the Led 15.

:code:                      0x00,0x00,0xFF    //R,G,B Led 16
:key1:                                ----
:es__:Color azul para el Led 16.
:en__:Blue color for the Led 16.

:code:                    };
[SOURCE_CODE_EX_END]
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Voy a añadir el código fuente que se va a ejecutar antes del bucle infinito. Va a realizar el parpadeo de todos los leds.
[ENGLISH]I am going to add the source code that will run before the infinite loop. It is going to blink all the leds.
[END_LIST]
[IMG]30.png
[IMG]31.png

[SOURCE_CODE_EX_BEGIN]214
:code:  AppClick4x4RGB_sendColors( (uint8_t*) au8Colors );
:key2:  -------------------------------------------------
:es__:Envía el array <b>au8Colors</b>, que pone la primera fila roja, la segunda verde, la tercera azul y la cuarta blanca.
:en__:It sends the array <b>au8Colors</b>, that colors the first row in red, the second one in green, the third one in blue and the fourth one in white.

:code:  HAL_Delay(500);
:key1:  --------------
:es__:Espera medio segundo.
:en__:Wait for half a second.

:code:
:code:  AppClick4x4RGB_sendColors( (uint8_t*) au8Off );
:key6:  ----------------------------------------------
:es__:Envía el array <b>au8Off</b>, que apaga todos los leds.
:en__:It sends the array <b>au8Off</b>, that switchs off all the leds.

:code:  HAL_Delay(500);
:key1:  --------------
:es__:Espera medio segundo.
:en__:Wait for half a second.

:code:
:code:  AppClick4x4RGB_sendColors( (uint8_t*) au8Colors );
:key2:  -------------------------------------------------
:es__:Envía el array <b>au8Colors</b>, que pone la primera fila roja, la segunda verde, la tercera azul y la cuarta blanca.
:en__:It sends the array <b>au8Colors</b>, that colors the first row in red, the second one in green, the third one in blue and the fourth one in white.

:code:  HAL_Delay(500);
:key1:  --------------
:es__:Espera medio segundo.
:en__:Wait for half a second.

:code:
:code:  AppClick4x4RGB_sendColors( (uint8_t*) au8Off );
:key6:  ----------------------------------------------
:es__:Envía el array <b>au8Off</b>, que apaga todos los leds.
:en__:It sends the array <b>au8Off</b>, that switchs off all the leds.

:code:  HAL_Delay(500);
:key1:  --------------
:es__:Espera medio segundo.
:en__:Wait for half a second.

:code:
:code:  AppClick4x4RGB_sendColors( (uint8_t*) au8Colors );
:key2:  -------------------------------------------------
:es__:Envía el array <b>au8Colors</b>, que pone la primera fila roja, la segunda verde, la tercera azul y la cuarta blanca.
:en__:It sends the array <b>au8Colors</b>, that colors the first row in red, the second one in green, the third one in blue and the fourth one in white.

:code:  HAL_Delay(500);
:key1:  --------------
:es__:Espera medio segundo.
:en__:Wait for half a second.

:code:
:code:  AppClick4x4RGB_sendColors( (uint8_t*) au8Off );
:key6:  ----------------------------------------------
:es__:Envía el array <b>au8Off</b>, que apaga todos los leds.
:en__:It sends the array <b>au8Off</b>, that switchs off all the leds.

:code:  HAL_Delay(500);
:key1:  --------------
:es__:Espera medio segundo.
:en__:Wait for half a second.
[SOURCE_CODE_EX_END]
[BEGIN_LIST]
[SPANISH]Este mismo parpadeo se podría haber hecho con un bucle for.
[ENGLISH]The same operation could have been implemented with a for loop.
[END_LIST]
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Voy a añadir el código que se va a ejecutar de manera continua dentro del bucle infinito.
[ENGLISH]I am going to add the source code that will run inside the infinite loop.
[END_LIST]
[IMG]32.png
[IMG]33.png

[SOURCE_CODE_EX_BEGIN]232
:code:  while (1)
:code:  {
:code:      AppClick4x4RGB_sendColors( (uint8_t*) au8Colors0 );
:key6:      --------------------------------------------------
:es__:Envía el array <b>au8Colors0</b>, que enciende la <b>primera</b> fila de azul, apagando los demás.
:en__:It sends the array <b>au8Colors0</b>, that switchs on the <b>first</b> row in blue, switching off the other leds.

:code:      HAL_Delay(200);
:key1:      --------------
:es__:Espera 200 ms.
:en__:Wait for 200 ms.

:code:
:code:      AppClick4x4RGB_sendColors( (uint8_t*) au8Colors1 );
:key6:      --------------------------------------------------
:es__:Envía el array <b>au8Colors1</b>, que enciende la <b>segunda</b> fila de azul, apagando los demás.
:en__:It sends the array <b>au8Colors1</b>, that switchs on the <b>second</b> row in blue, switching off the other leds.

:code:      HAL_Delay(200);
:key1:      --------------
:es__:Espera 200 ms.
:en__:Wait for 200 ms.

:code:
:code:      AppClick4x4RGB_sendColors( (uint8_t*) au8Colors2 );
:key6:      --------------------------------------------------
:es__:Envía el array <b>au8Colors2</b>, que enciende la <b>tercera</b> fila de azul, apagando los demás.
:en__:It sends the array <b>au8Colors2</b>, that switchs on the <b>third</b> row in blue, switching off the other leds.

:code:      HAL_Delay(200);
:key1:      --------------
:es__:Espera 200 ms.
:en__:Wait for 200 ms.

:code:
:code:      AppClick4x4RGB_sendColors( (uint8_t*) au8Colors3 );
:key6:      --------------------------------------------------
:es__:Envía el array <b>au8Colors3</b>, que enciende la <b>cuarta</b> fila de azul, apagando los demás.
:en__:It sends the array <b>au8Colors3</b>, that switchs on the <b>fourth</b> row in blue, switching off the other leds.

:code:      HAL_Delay(200);
:key1:      --------------
:es__:Espera 200 ms.
:en__:Wait for 200 ms.

:code:    /* USER CODE END WHILE */
:code:
:code:    /* USER CODE BEGIN 3 */
:code:  }
[SOURCE_CODE_EX_END]
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Y por último incluir el fichero <b>AppClick4x4RGB.h</b> para tener acceso a la función <b>AppClick4x4RGB_sendColors</b>.
[ENGLISH]And finally, you have to include the file <b>AppClick4x4RGB.h</b> to have access to the function <b>AppClick4x4RGB_sendColors</b>.
[END_LIST]
[IMG]34.png
[IMG]35.png
[BLOCK_END]

[TITLE_SPANISH]AppClick4x4RGB.c|h
[TITLE_ENGLISH]AppClick4x4RGB.c|h

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Voy a añadir 2 ficheros vacíos al proyecto : <b>AppClick4x4RGB.c</b> y <b>AppClick4x4RGB.h</b>.
[ENGLISH]I am going to add 2 empty files to the project : <b>AppClick4x4RGB.c</b> and <b>AppClick4x4RGB.h</b>.
[END_LIST]
[IMG]15.png
[IMG]17.png
[IMG]18.png
[IMG]19.png
[IMG]20.png
[IMG]21.png
[IMG]22.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Voy a copiar en <b>AppClick4x4RGB.h</b> el código que he preparado. 
[ENGLISH]I am going to copy to <b>AppClick4x4RGB.h</b> the source code that I have prepared.
[END_LIST]
[IMG]23.png
[IMG]24.png

[SOURCE_CODE_EX_BEGIN]25
:code://///////////////////////////////////////////////////////////
:code:// Global function definitions
:code://///////////////////////////////////////////////////////////
:code:extern void AppClick4x4RGB_sendColors( uint8_t* _au8Colors );
:key2:------
:es__:Como la función <b>AppClick4x4RGB_sendColors</b> va a ser usada en otros ficheros ( en <b>main.c</b> ) debemos hacer externa su declaración.
:en__:As the function <b>AppClick4x4RGB_sendColors</b> is going to be used in other files ( in <b>main.c</b> ) we must make extern its declaration.
[SOURCE_CODE_EX_END]
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Voy a copiar en <b>AppClick4x4RGB.c</b> el código que he preparado. 
[ENGLISH]I am going to copy to <b>AppClick4x4RGB.c</b> the source code that I have prepared.
[END_LIST]
[IMG]25.png
[IMG]26.png

[SOURCE_CODE_EX_BEGIN]78
:code://  ----------------------------------------------
:code://  AppClick4x4RGB_sendColors
:code://  ----------------------------------------------
:code:void AppClick4x4RGB_sendColors(    uint8_t* _au8Colors)
:key1:     -------------------------
:es__:La función <b>AppClick4x4RGB_sendColors</b> envía el array <b>_au8Colors</b> de datos a los 16 leds RGB.
:en__:The function <b>AppClick4x4RGB_sendColors</b> sends the array <b>_au8Colors</b> to the 16 RGB leds.

:code:{
:code:    for(int iLed = 0;
:code:            iLed < 3 * 16;
:key2:                   ------
:es__:A cada led hay que mandarle 3 bytes, por lo que en total hay que enviar 3 bytes * 16 leds =  <b>48 bytes</b>.
:en__:3 bytes have to be sent to each led , therefore,  in total 3 bytes * 16 leds =  <b>48 bytes</b> have to be sent.

:code:            iLed += 3)
:key3:                 ----
:es__:En cada iteración del bucle vamos a enviar 3 bytes, por lo que incrementamos la variable <b>iLed</b> en 3.
:en__:On each iteration of the loop 3 bytes will be sent, that is s why the variable <b>iLed</b> is incremented by 3.

:code:    {
:code:        uint8_t u8Green   =    _au8Colors[iLed + 1];
:key4:                                          --------
:es__:Como hemos visto antes, el color verde es el segundo valor (de los 3 que hay por línea). Por eso le sumamos un 1 para acceder a él.
:en__:As we have seen before, the green color is the second value (out of the 3 per line). For that we add a 1 to access it. 

:code:        SendByte( u8Green );
:key5:                  -------
:es__:Como veremos más adelante el WS2812 tiene que recibir 3 bytes con la intensidad de los leds. El primero debe ser el Verde.
:en__:As we will see later on, the WS2812 has to receive 3 bytes with the intensity of the leds. The first one is for the green color.

:code:
:code:        uint8_t u8Red     =    _au8Colors[iLed];
:code:        SendByte( u8Red );
:key5:                  -----
:es__:El segundo byte a enviar es el color Rojo.
:en__:The second byte to send is the red color.

:code:
:code:        uint8_t u8Blue    =    _au8Colors[iLed + 2];
:key4:                                          --------
:es__:Como el color azul es el tercer valor (de los 3 que hay por fila), le sumamos un 2 para acceder a él.
:en__:As the blue color is the third value (out of the 3 per line), we add a 2 to access it.

:code:        SendByte( u8Blue );
:key5:                  ------
:es__:El tercer byte a enviar es el color Azul.
:en__:The third byte to send is the blue color.

:code:    }
:code:}
[SOURCE_CODE_EX_END]
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Esta es una captura del datasheet (que te puedes descargar en la sección de descargas) del WS2812.
[ENGLISH]This is a screenshot of the datasheet (that you can download in the download section) of the WS2812.
[SPANISH]Como puedes ver, primero hay que enviar los 8 bits del color verde (G), luego los 8 bits del color rojo (R) y por último los 8 bits del color azul (B).
[ENGLISH]As you can see, first, we have to send the 8 bits for the green color (G), next, the 8 bits for the red color (R) and finally the 8 bits for the blue color (B).
[END_LIST]
[IMG]42.png
[BLOCK_END]

[BLOCK_START]
[SOURCE_CODE_EX_BEGIN]42
:code://  ----------------------------------------------
:code://  SendByte
:code://  ----------------------------------------------
:code:void SendByte( uint8_t _u8Data )
:key1:     --------
:es__:La función <b>SendByte</b> recorre todos los bits del byte <b>_u8Data</b> y llama a las funciones <b>write0</b> y <b>write1</b> para enviarlo por el pin <b>PA5</b>.
:en__:The function <b>SendByte</b> walks through all the bits of the byte <b>_u8Data</b> and call the functions <b>write0</b> and <b>write1</b> to send it over the pin <b>PA5</b>.

:code:{
:code:    for(int i=0x80;
:key2:              ----
:es__:La variable <b>i</b> va a ser la máscara para recorrer todos los bits del byte, desde el bit 7 (valor <b>0x80</b>) hasta el bit 0 (valor <b>0x01</b>).
:en__:The variable <b>i</b> is going to be the mask to iterate over the bits of the byte, from the bit 7 (value <b>0x80</b>) until the bit 0 ( value <b>0x01</b>).

:code:            i != 0;
:key3:            ------
:es__:El bucle terminadrá cuando la variable <b>i</b> valga 0.
:en__:The loop will end when the variable <b>i</b> is 0.

:code:            i = i >> 1)
:key4:                  ----
:es__:Desplazamos la máscara un bit a la derecha.
:en__:Shift the mask one bit to the right.

:code:    {
:code:        if( ( _u8Data & i) != 0 )
:code:        {
:code:            write1();
:key5:            ------
:es__:Generamos un <b>1</b> en el pin <b>PA5</b>.
:en__:Generate a <b>1</b> on the pin <b>PA5</b>.

:code:        }
:code:        else
:code:        {
:code:            write0();
:key6:            ------
:es__:Generamos un <b>0</b> en el pin <b>PA5</b>.
:en__:Generate a <b>0</b> on the pin <b>PA5</b>.

:code:        }
:code:    }
:code:}
[SOURCE_CODE_EX_END]
[BLOCK_END]

[MPPRO_SECTION_ES_EN]Timing|Timing
[MPPRO_VIDEO]03_Camtasia\02_anim_Timing.mp4|0

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Estas son las señales que hay generar para enviar un <b>0</b>, un <b>1</b> y un <b>reset</b>.
[ENGLISH]These are the signals that we have to generate to send a <b>0</b>, a <b>1</b> and a <b>reset</b>.
[SPANISH]La señal de reset hay que generada antes de enviar la secuencia de colores para los leds. Hay que tener el pin <b>PA5</b> a <b>0</b> durante al menos <b>50us</b>. 
[ENGLISH]The reset signal has to be generated before sending the sequence of colors for the leds. The pin <b>PA5</b> has to be <b>0</b> for at least <b>50us</b>. 
[SPANISH]La señal de reset la vamos a hacer haciendo simplemente una espera con la función <b>HAL_Delay</b>.
[ENGLISH]The reset signal is going to be implemented simply doing a delay with the function <b>HAL_Delay</b>.
[END_LIST]
[IMG]43.png
[BLOCK_END]

[MPPRO_SECTION_ES_EN]IDE|IDE
[MPPRO_VIDEO]03_Camtasia\03_cam_IDE.mp4|378

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Veamos cómo generar un 1.
[ENGLISH]Let&#39s see how to generate a 1.
[SPANISH]Vamos a escribir 4 veces en el registro <b>BSRR</b> para poner a 1 el pin <b>PA5</b>. Estas 4 escrituras tardarán un tiempo de aproximadamente 0.7 microsec. Según el datasheet del WS2812 hay una tolerancia de 0.15 microsec.
[ENGLISH]We are going to write 4 times to the register <b>BSRR</b> to set a 1 on the pin <b>PA5</b>. These 4 writes will last around 0.7 us. According to the WS2812 datasheet, there is a tolerance of 0.15 us.
[SPANISH]Después escribimos en el registro <b>BSRR</b> para poner a 0 el pin <b>PA5</b>.
[ENGLISH]Next, we write to the register <b>BSRR</b> to clear the pin <b>PA5</b>.
[END_LIST]

[SOURCE_CODE_EX_BEGIN]45
:code://  ----------------------------------------------
:code://  write1
:code://  ----------------------------------------------
:code:void write1()
:code:{
:code:      GPIOA->BSRR   |=  GPIO_BSRR_BS_5;         //Set PA5
:key5:                        --------------
:es__:Ponemos el bit 5 (<b>GPIO_BSRR_BS_5</b>) a 1 del registro <b>BSRR</b> del puerto A para poner a 1 el pin <b>PA5</b>.
:en__:We set the bit 5 (<b>GPIO_BSRR_BS_5</b>) of the register <b>BSRR</b> of the port A in order to set a 1 on the pin <b>PA5</b>.

:code:      GPIOA->BSRR   |=  GPIO_BSRR_BS_5;         //Set PA5
:code:      GPIOA->BSRR   |=  GPIO_BSRR_BS_5;         //Set PA5
:code:      GPIOA->BSRR   |=  GPIO_BSRR_BS_5;         //Set PA5
:code:
:code:      GPIOA->BSRR   |=  GPIO_BSRR_BR_5;         //Clear PA5
:key6:                        --------------
:es__:Ponemos el bit 21 (<b>GPIO_BSRR_BR_5</b>) a 1 del registro <b>BSRR</b> del puerto A para poner a 0 el pin <b>PA5</b>.
:en__:We set the bit 21 (<b>GPIO_BSRR_BR_5</b>) of the register <b>BSRR</b> of the port A in order to set a 0 on the pin <b>PA5</b>.

:code:}
[SOURCE_CODE_EX_END]
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Veamos cómo generar un 0.
[ENGLISH]Let&#39s see how to generate a 0.
[SPANISH]Vamos a escribir 2 veces en el registro <b>BSRR</b> para poner a 1 el pin <b>PA5</b>. Estas 2 escrituras tardarán un tiempo de aproximadamente 0.35 microsec. Según el datasheet del WS2812 hay una tolerancia de 0.15 microsec.
[ENGLISH]We are going to write 2 times to the register <b>BSRR</b> to set a 1 on the pin <b>PA5</b>. These 2 writes will last around 0.35 us. According to the WS2812 datasheet, there is a tolerance of 0.15 us.
[SPANISH]Después escribimos en el registro <b>BSRR</b> para poner a 0 el pin <b>PA5</b>.
[ENGLISH]Next, we write to the register <b>BSRR</b> to clear the pin <b>PA5</b>.
[END_LIST]

[SOURCE_CODE_EX_BEGIN]34
:code://  ----------------------------------------------
:code://  write0
:code://  ----------------------------------------------
:code:void write0()
:code:{
:code:      GPIOA->BSRR   |=  GPIO_BSRR_BS_5;         //Set PA5
:key5:                        --------------
:es__:Ponemos el bit 5 (<b>GPIO_BSRR_BS_5</b>) a 1 del registro <b>BSRR</b> del puerto A para poner a 1 el pin <b>PA5</b>.
:en__:We set the bit 5 (<b>GPIO_BSRR_BS_5</b>) of the register <b>BSRR</b> of the port A in order to set a 1 on the pin <b>PA5</b>.

:code:      GPIOA->BSRR   |=  GPIO_BSRR_BS_5;         //Set PA5
:code:
:code:      GPIOA->BSRR   |=  GPIO_BSRR_BR_5;         //Clear PA5
:key6:                        --------------
:es__:Ponemos el bit 21 (<b>GPIO_BSRR_BR_5</b>) a 1 del registro <b>BSRR</b> del puerto A para poner a 0 el pin <b>PA5</b>.
:en__:We set the bit 21 (<b>GPIO_BSRR_BR_5</b>) of the register <b>BSRR</b> of the port A in order to set a 0 on the pin <b>PA5</b>.

:code:}
[SOURCE_CODE_EX_END]
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Ya puedo compilar y depurar el programa.
[ENGLISH]You can build and debug the program.
[END_LIST]
[IMG]36.png
[IMG]37.png
[IMG]38.png
[IMG]39.png
[IMG]40.png
[IMG]41.png
[BLOCK_END]

[MPPRO_SECTION_ES_EN]Osciloscopio|Oscilloscope
[MPPRO_VIDEO]03_Camtasia\04_scope.mp4|0

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Estas son dos capturas, con el osciloscopio, de un 0 en la señal DIN.
[ENGLISH]These are 2 screenshots, with the oscilloscope, of a 0 on the DIN signal 
[SPANISH]El tiempo en ON es 0.44 microsegundos.
[ENGLISH]The ON time is 0.44 us.
[END_LIST]
[IMG]44.png
[BEGIN_LIST]
[SPANISH]El tiempo en OFF es 1 microsegundo.
[ENGLISH]The OFF time is 1 us.
[END_LIST]
[IMG]45.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Estas son dos capturas de un 1 en la señal DIN.
[ENGLISH]These are 2 screenshots of a 1 on the DIN signal 
[SPANISH]El tiempo en ON es 0.85 microsegundos.
[ENGLISH]The ON time is 0.85 us.
[END_LIST]
[IMG]46.png
[BEGIN_LIST]
[SPANISH]El tiempo en OFF es 1 microsegundo.
[ENGLISH]The OFF time is 1 us.
[END_LIST]
[IMG]47.png
[BLOCK_END]

[SECTION_SPANISH]Descargas
[SECTION_ENGLISH]Downloads
[BLOCK_START]
[BEGIN_LIST]
[LINK_SPANISH]downloads/WS2812.pdf;Datasheet del WS2812
[LINK_ENGLISH]downloads/WS2812.pdf;WS2812 datasheet
[END_LIST]
[BLOCK_END]
