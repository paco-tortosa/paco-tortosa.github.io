[LESSON_FOLDER]../_cursos/04_STM32F0/Seccion06/L39_TIM1_HAL/
[IMG_FOLDER]img/

[TITLE_SPANISH]Señal cuadrada (HAL)
[TITLE_ENGLISH]Square signal (HAL)

[MPPRO_SECTION_ES_EN]IDE|IDE
[MPPRO_VIDEO]03_Camtasia\01_cam_IDE.mp4|0

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]En esta lección vamos a ver otra manera de implementar el programa de la lección anterior, esta vez usando la HAL.
[ENGLISH]In this lesson we are going to see another way of implementing the program of the previous lesson, this time using the HAL.
[END_LIST]
[BLOCK_END]

[TITLE_SPANISH]Pasos
[TITLE_ENGLISH]Steps

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Crea un proyecto nuevo.
[ENGLISH]Create a new project.
[END_LIST]
[IMG]01.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Selecciona el kit de evaluación.
[ENGLISH]Select the evaluation kit.
[END_LIST]
[IMG]02.png
[IMG]03.png
[IMG]04.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]El nombre para el proyecto será <b>P19_TIM1_HAL</b>.
[ENGLISH]The name for the project will be <b>P19_TIM1_HAL</b>.
[END_LIST]
[IMG]05.png
[IMG]06.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Ve a la configuración de <b>TIM1</b>.
[ENGLISH]Go to the configuration of <b>TIM1</b>.
[END_LIST]
[IMG]07.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Selecciona como fuente de reloj el reloj interno.
[ENGLISH]Select as Clock Source the Internal Clock.
[END_LIST]
[IMG]08.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]En el panel inferior se pueden configurar los parámetros del <b>TIM1</b>.
[ENGLISH]In the lower pane the parameters of <b>TIM1</b> can be configured.
[END_LIST]
[IMG]09.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Configura el <b>Prescaler</b> como 47, el <b>Counter mode</b> como descendente y el <b>Counter period</b> como 150.
[ENGLISH]Configure the <b>Prescaler</b> as 47, the <b>Counter mode</b> as descending and the <b>Counter period</b> as 150.
[END_LIST]
[IMG]10.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Hay que generar el código de inicialización.
[ENGLISH]Generate the inicialization code.
[END_LIST]
[IMG]11.png
[IMG]12.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Vamos al fichero <b>main.c</b>
[ENGLISH]Go to the file <b>main.c</b>
[END_LIST]
[IMG]13.png
[IMG]14.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Se ha geneado automáticamente una función llamada <b>MX_TIM1_Init</b> para inicializar el <b>TIM1</b>.
[ENGLISH]A function called <b>MX_TIM1_Init</b> has been created to initialize the timer <b>TIM1</b>.
[END_LIST]
[IMG]15.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Puedes ver en el código los parámetros que introdujimos en el configurador.
[ENGLISH]You can see on the source code the parameters that we enter in the configurator.
[END_LIST]
[IMG]16.png
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Vamos a añadir nuestro código.
[ENGLISH]We are going to add our source code.
[END_LIST]
[IMG]17.png
[IMG]18.png

[SOURCE_CODE_EX_BEGIN]103
:code:  /* Infinite loop */
:code:  /* USER CODE BEGIN WHILE */
:code:  HAL_TIM_Base_Start( &htim1 );
:key2:                       -----
:es__:Los parámetros de configuración están en <b>htim1</b> 
:en__:The configuration parameters are in <b>htim1</b> 

:key1:  ------------------
:es__:La función <b>HAL_TIM_Base_Start</b> inicializa el timer <b>TIM1</b>.
:en__:The function <b>HAL_TIM_Base_Start</b> initializes the timer <b>TIM1</b>.

:code:  while (1)
:code:  {
:code:      __HAL_TIM_CLEAR_FLAG( &htim1, TIM_FLAG_UPDATE);
:key3:      ----------------------------------------------
:es__:Pone a 0 el flag <b>UIF</b>.
:en__:Clear the flag <b>UIF</b>.

:code:      while( __HAL_TIM_GET_FLAG( &htim1, TIM_FLAG_UPDATE) == RESET );
:key4:             --------------------------------------------
:es__:Con la función <b>__HAL_TIM_GET_FLAG</b> obtenemos el valor del bit <b>UIF</b> del registro de status <b>SR</b>.
:en__:With the function <b>__HAL_TIM_GET_FLAG</b> we get the value of the bit <b>UIF</b> of the status register <b>SR</b>.

:key5:                                                                    -
:es__:Mientras el flag sea 0 permanecemos en el bucle. (<b>;</b> es una sentencia en C vacía).
:en__:While the flag is 0, we stay inside the loop. (<b>;</b> is an empty statement).

:code:
:code:      //Toggle LED
:code:      HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
:key6:      -------------------------------------
:es__:Aquí llegamos cuando el bit <b>UIF</b> está a uno, indicando que el registro <b>CNT</b> ha llegado a 0. Conmutamos el pin <b>PA5</b>.
:en__:We reach this instruction when the bit <b>UIF</b> is 1, indicating that the register <b>CNT</b> reached 0. Toggle the pin <b>PA5</b>.

:code:    /* USER CODE END WHILE */
:code:
:code:    /* USER CODE BEGIN 3 */
:code:  }
[SOURCE_CODE_EX_END]
[BLOCK_END]

[BLOCK_START]
[BEGIN_LIST]
[SPANISH]Compila y depura el programa.
[ENGLISH]Build and debug the program.
[END_LIST]
[IMG]19.png
[IMG]20.png
[IMG]21.png
[IMG]22.png
[IMG]23.png
[IMG]24.png
[BLOCK_END]

